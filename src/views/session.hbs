{{#if user}}
    <h2 class="text-xl font-bold">{{sesh.name}}</h2>
    <h1 id="timer" class="text-3xl font-semibold">25:00</h1>

    <div id="commentSection" class="mt-6">
        <h3 class="text-lg font-semibold">Comments</h3>
        <ul id="commentsList" class="list-disc pl-5"></ul>
        <form id="commentForm" class="mt-4">
            <input type="text" id="commentInput" placeholder="Write a comment..." required class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
            <button type="submit" class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded mt-3">Submit</button>
        </form>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.3.1/socket.io.js"></script>
    <script>
        const socket = io();

        socket.on('timerUpdate', (time) => {
            updateTimer(time);
        });

        function sendTimerUpdate(remainingTime) {
            console.log('reminaing time', remainingTime);
            socket.emit('timerUpdate', remainingTime);
        }

        // Pomodoro timer logic
        let timerInterval;
        let startTime;
        let paused = false;
        let elapsedTime = 0;
        let remainingTime = 1 * 60 * 1000; 
        let status = 'work';

        function startTimer(duration, display) {
            var timer = duration, minutes, seconds;
            setInterval(function () {
                minutes = parseInt(timer / 60, 10);
                seconds = parseInt(timer % 60, 10);

                minutes = minutes < 10 ? "0" + minutes : minutes;
                seconds = seconds < 10 ? "0" + seconds : seconds;

                display.textContent = minutes + ":" + seconds;

                if (--timer < 0) {
                    if(status === 'work')
                    {
                        duration = 25 * 60 * 1000;
                        timer = duration;
                    }
                    else
                    {
                        duration = 5 * 60 * 1000;
                        timer = duration;
                    } 
                }
            }, 1000);
        }

        window.onload = function () {
            var fiveMinutes = 60 * 25, 
                display = document.querySelector('#timer');
            startTimer(fiveMinutes, display);


             const initialComments = [
            { author: "server", message: "Session Started" },
            { author: "server", message: "Feel Free to take notes here!" },
        ];

        function addCommentToDOM(commentText) {
            const commentsList = document.getElementById('commentsList');
            const commentItem = document.createElement('li');
            commentItem.textContent = commentText;
            commentsList.appendChild(commentItem);
        }

        initialComments.map(comment => {
            const commentText = `${comment.author} said: ${comment.message}`;
            addCommentToDOM(commentText);
        });
        };


        function updateTimer() {
            const currentTime = Date.now();
            elapsedTime = currentTime - startTime;
            remainingTime = paused ? remainingTime : remainingTime - 1000;

            if (remainingTime <= 0) {
                // Timer finished
                if(status === 'work')
                {
                    remainingTime = 5 * 60 * 1000;
                    status = 'break';
                }
                else 
                {
                    remainingTime = 25 * 60 * 1000;
                }

                clearInterval(timerInterval);
                timerInterval = null;
            }

            const minutes = Math.floor(remainingTime / 60000);
            const seconds = Math.floor((remainingTime % 60000) / 1000);
            const formattedTime = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;

            const timerElement = document.getElementById('timer');
            if (timerElement.textContent !== formattedTime) {
                timerElement.textContent = formattedTime;
            }
        }

        document.getElementById('commentForm').addEventListener('submit', function(event) {
            event.preventDefault();
            const commentInput = document.getElementById('commentInput');
            const newComment = "Anon said: " + commentInput.value;
            if (newComment.trim()) {
                addCommentToDOM(newComment);
                commentInput.value = '';
            }
        });

       



        


    </script>
{{else}}
    <div class="error text-red-500">There was an error logging in. Please try logging in again.</div>
{{/if}}
 